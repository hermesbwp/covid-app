{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hermes\\\\Desktop\\\\Pit\\\\covid-app\\\\src\\\\components\\\\Book\\\\BookForm.jsx\";\nimport React from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"./index.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookForm() {\n  const initialValues = {\n    name: \"\",\n    birthDay: null,\n    date: null\n  };\n\n  const onSubmit = async values => {\n    console.log(values);\n\n    try {\n      const res = await axios.post(\"/books\", values);\n      console.log(res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function validate(values) {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n\n    if (!values.birthDay) {\n      errors.birthDay = \"Required\";\n    }\n\n    if (!values.date) {\n      errors.date = \"Required\";\n    }\n\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validate: validate,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"name\",\n        placeHolder: \"Nome\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"name\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"birthDay\",\n        placeHolder: \"Data de nascimento\",\n        children: ({\n          form,\n          field\n        }) => {\n          const {\n            setFieldValue\n          } = form;\n          const {\n            value\n          } = field;\n          return /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"input\",\n            dateFormat: \"dd/MMM/yy\",\n            maxDate: new Date(),\n            id: \"birthDay\",\n            ...field,\n            selected: value,\n            onChange: val => setFieldValue(\"birthDay\", val.getTime()),\n            showMonthDropdown: true,\n            showYearDropdown: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"birthDay\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"date\",\n        placeHolder: \"Data de vacina\\xE7\\xE3o\",\n        children: ({\n          form,\n          field\n        }) => {\n          const {\n            setFieldValue\n          } = form;\n          const {\n            value\n          } = field;\n          return /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"input\",\n            dateFormat: \"dd/MMM/yyyy h:mm aa\",\n            timeFormat: \"HH:mm\",\n            timeIntervals: 15,\n            showTimeSelect: true,\n            minDate: new Date(),\n            id: \"date\",\n            ...field,\n            selected: value,\n            onChange: val => setFieldValue(\"date\", val.getTime())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"date\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"info\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BookForm;\nexport default BookForm;\n/*\n<Columns>\n          <Columns.Column>\n            <Label>Nome:</Label>\n            <Control>\n              <Field name=\"name\" type=\"text\" />\n            </Control>\n          </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Data de nascimento:</Label>\n            <Control>\n              <DatePicker\n                type=\"date\"\n                selected={startDate}\n                className=\"blue-border\"\n              />\n            </Control>\n          </Columns.Column>\n        </Columns>\n\n        <Columns>\n          <Columns.Column>Agendamento </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Dia de vacinação:</Label>\n            <Control>\n              <DatePicker showTimeSelect className=\"blue-border\" />\n            </Control>\n          </Columns.Column>\n        </Columns>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["C:/Users/Hermes/Desktop/Pit/covid-app/src/components/Book/BookForm.jsx"],"names":["React","Button","Formik","Form","Field","ErrorMessage","DatePicker","axios","BookForm","initialValues","name","birthDay","date","onSubmit","values","console","log","res","post","e","validate","errors","form","field","setFieldValue","value","Date","val","getTime"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"./index.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"../../utils/api\";\n\nfunction BookForm() {\n  const initialValues = { name: \"\", birthDay: null, date: null };\n\n  const onSubmit = async (values) => {\n    console.log(values);\n    try {\n      const res = await axios.post(\"/books\", values);\n      console.log(res);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  function validate(values) {\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n    if (!values.birthDay) {\n      errors.birthDay = \"Required\";\n    }\n    if (!values.date) {\n      errors.date = \"Required\";\n    }\n    return errors;\n  }\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={validate}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <Field\n          type=\"text\"\n          name=\"name\"\n          placeHolder=\"Nome\"\n          className=\"input\"\n        ></Field>\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <Field name=\"birthDay\" placeHolder=\"Data de nascimento\">\n          {({ form, field }) => {\n            const { setFieldValue } = form;\n            const { value } = field;\n            return (\n              <DatePicker\n                className=\"input\"\n                dateFormat=\"dd/MMM/yy\"\n                maxDate={new Date()}\n                id=\"birthDay\"\n                {...field}\n                selected={value}\n                onChange={(val) => setFieldValue(\"birthDay\", val.getTime())}\n                showMonthDropdown\n                showYearDropdown\n              />\n            );\n          }}\n        </Field>\n        <ErrorMessage name=\"birthDay\" component=\"div\" />\n        <Field name=\"date\" placeHolder=\"Data de vacinação\">\n          {({ form, field }) => {\n            const { setFieldValue } = form;\n            const { value } = field;\n            return (\n              <DatePicker\n                className=\"input\"\n                dateFormat=\"dd/MMM/yyyy h:mm aa\"\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                showTimeSelect\n                minDate={new Date()}\n                id=\"date\"\n                {...field}\n                selected={value}\n                onChange={(val) => setFieldValue(\"date\", val.getTime())}\n              />\n            );\n          }}\n        </Field>\n        <ErrorMessage name=\"date\" component=\"div\" />\n        <Button type=\"submit\" color=\"info\">\n          Submit\n        </Button>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default BookForm;\n\n/*\n<Columns>\n          <Columns.Column>\n            <Label>Nome:</Label>\n            <Control>\n              <Field name=\"name\" type=\"text\" />\n            </Control>\n          </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Data de nascimento:</Label>\n            <Control>\n              <DatePicker\n                type=\"date\"\n                selected={startDate}\n                className=\"blue-border\"\n              />\n            </Control>\n          </Columns.Column>\n        </Columns>\n\n        <Columns>\n          <Columns.Column>Agendamento </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Dia de vacinação:</Label>\n            <Control>\n              <DatePicker showTimeSelect className=\"blue-border\" />\n            </Control>\n          </Columns.Column>\n        </Columns>\n*/\n"]},"metadata":{},"sourceType":"module"}