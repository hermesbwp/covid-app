{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _constants = _interopRequireDefault(require(\"../../constants\"));\n\nvar _column = _interopRequireDefault(require(\"./components/column\"));\n\nvar _constants2 = _interopRequireDefault(require(\"./constants\"));\n\nvar _modifiers = _interopRequireDefault(require(\"../../modifiers\"));\n\nvar _element = _interopRequireDefault(require(\"../element\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar breakpoints = [null].concat(Object.keys(_constants[\"default\"].BREAKPOINTS).map(function (key) {\n  return _constants[\"default\"].BREAKPOINTS[key];\n}));\nvar sizes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\nvar Columns = function Columns(_ref) {\n  var _objectSpread2, _ref2;\n\n  var className = _ref.className,\n      breakpoint = _ref.breakpoint,\n      gapless = _ref.gapless,\n      multiline = _ref.multiline,\n      centered = _ref.centered,\n      vCentered = _ref.vCentered,\n      variableGap = _ref.variableGap,\n      props = _objectWithoutProperties(_ref, [\"className\", \"breakpoint\", \"gapless\", \"multiline\", \"centered\", \"vCentered\", \"variableGap\"]);\n\n  return _react[\"default\"].createElement(_element[\"default\"], _extends({}, props, {\n    className: (0, _classnames[\"default\"])(className, 'columns', _objectSpread((_objectSpread2 = {}, _defineProperty(_objectSpread2, \"is-\".concat(breakpoint), breakpoint), _defineProperty(_objectSpread2, 'is-gapless', gapless), _defineProperty(_objectSpread2, 'is-multiline', multiline), _defineProperty(_objectSpread2, 'is-centered', centered), _defineProperty(_objectSpread2, 'is-vcentered', vCentered), _defineProperty(_objectSpread2, 'is-variable', Object.keys(variableGap).length > 0), _objectSpread2), variableGap ? (_ref2 = {}, _defineProperty(_ref2, \"is-\".concat(variableGap.touch, \"-touch\"), variableGap.touch), _defineProperty(_ref2, \"is-\".concat(variableGap.mobile, \"-mobile\"), variableGap.mobile), _defineProperty(_ref2, \"is-\".concat(variableGap.tablet, \"-tablet\"), variableGap.tablet), _defineProperty(_ref2, \"is-\".concat(variableGap.desktop, \"-desktop\"), variableGap.desktop), _defineProperty(_ref2, \"is-\".concat(variableGap.widescreen, \"-widescreen\"), variableGap.widescreen), _defineProperty(_ref2, \"is-\".concat(variableGap.fullhd, \"-fullhd\"), variableGap.fullhd), _ref2) : {}))\n  }));\n};\n\nColumns.Column = _column[\"default\"];\nColumns.CONSTANTS = _constants2[\"default\"];\nColumns.propTypes = _objectSpread({}, _modifiers[\"default\"].propTypes, {\n  children: _propTypes[\"default\"].node,\n  className: _propTypes[\"default\"].string,\n  style: _propTypes[\"default\"].shape({}),\n  variableGap: _propTypes[\"default\"].shape(_objectSpread({}, Object.values(_constants[\"default\"].BREAKPOINTS).reduce(function (values, breakpoint) {\n    return _objectSpread({}, values, _defineProperty({}, breakpoint, _propTypes[\"default\"].oneOf(sizes)));\n  }, {}))),\n\n  /**\n   * Breakpoint where columns become stacked.\n   */\n  breakpoint: _propTypes[\"default\"].oneOf(breakpoints),\n\n  /**\n   * `true` to remove space between columns\n   */\n  gapless: _propTypes[\"default\"].bool,\n\n  /**\n   * `true` if you want to use more than one line if you add more column elements that would fit in a single row.\n   */\n  multiline: _propTypes[\"default\"].bool,\n\n  /**\n   * `true` you want the columns inside to be horizontaly centered\n   */\n  centered: _propTypes[\"default\"].bool,\n\n  /**\n   * `true` if you want to vertically align columns\n   */\n  vCentered: _propTypes[\"default\"].bool\n});\nColumns.defaultProps = _objectSpread({}, _modifiers[\"default\"].defaultProps, {\n  children: null,\n  className: undefined,\n  style: undefined,\n  breakpoint: undefined,\n  gapless: false,\n  centered: false,\n  vCentered: false,\n  multiline: true,\n  variableGap: {}\n});\nvar _default = Columns;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/components/columns/columns.js"],"names":["breakpoints","CONSTANTS","sizes","Columns","className","breakpoint","gapless","multiline","centered","vCentered","variableGap","props","Object","Column","COLUMN_CONSTANTS","modifiers","children","PropTypes","style","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport Column from './components/column';\nimport COLUMN_CONSTANTS from './constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\n\nconst breakpoints = [null].concat(\n  Object.keys(CONSTANTS.BREAKPOINTS).map(key => CONSTANTS.BREAKPOINTS[key]),\n);\n\nconst sizes = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\nconst Columns = ({\n  className,\n  breakpoint,\n  gapless,\n  multiline,\n  centered,\n  vCentered,\n  variableGap,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classNames(className, 'columns', {\n      [`is-${breakpoint}`]: breakpoint,\n      'is-gapless': gapless,\n      'is-multiline': multiline,\n      'is-centered': centered,\n      'is-vcentered': vCentered,\n      'is-variable': Object.keys(variableGap).length > 0,\n      ...(variableGap\n        ? {\n            [`is-${variableGap.touch}-touch`]: variableGap.touch,\n            [`is-${variableGap.mobile}-mobile`]: variableGap.mobile,\n            [`is-${variableGap.tablet}-tablet`]: variableGap.tablet,\n            [`is-${variableGap.desktop}-desktop`]: variableGap.desktop,\n            [`is-${variableGap.widescreen}-widescreen`]: variableGap.widescreen,\n            [`is-${variableGap.fullhd}-fullhd`]: variableGap.fullhd,\n          }\n        : {}),\n    })}\n  />\n);\n\nColumns.Column = Column;\n\nColumns.CONSTANTS = COLUMN_CONSTANTS;\n\nColumns.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  variableGap: PropTypes.shape({\n    ...Object.values(CONSTANTS.BREAKPOINTS).reduce(\n      (values, breakpoint) => ({\n        ...values,\n        [breakpoint]: PropTypes.oneOf(sizes),\n      }),\n      {},\n    ),\n  }),\n  /**\n   * Breakpoint where columns become stacked.\n   */\n  breakpoint: PropTypes.oneOf(breakpoints),\n  /**\n   * `true` to remove space between columns\n   */\n  gapless: PropTypes.bool,\n  /**\n   * `true` if you want to use more than one line if you add more column elements that would fit in a single row.\n   */\n  multiline: PropTypes.bool,\n  /**\n   * `true` you want the columns inside to be horizontaly centered\n   */\n  centered: PropTypes.bool,\n  /**\n   * `true` if you want to vertically align columns\n   */\n  vCentered: PropTypes.bool,\n};\n\nColumns.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: undefined,\n  style: undefined,\n  breakpoint: undefined,\n  gapless: false,\n  centered: false,\n  vCentered: false,\n  multiline: true,\n  variableGap: {},\n};\n\nexport default Columns;\n"]},"metadata":{},"sourceType":"script"}