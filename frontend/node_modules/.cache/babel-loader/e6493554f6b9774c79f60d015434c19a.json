{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hermes\\\\Desktop\\\\Pit\\\\covid-app\\\\frontend\\\\src\\\\components\\\\Book\\\\BookForm.jsx\";\nimport React from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"./index.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookForm() {\n  const initialValues = {\n    name: \"\",\n    birthDay: null,\n    date: null\n  };\n\n  const onSubmit = async values => {\n    const {\n      name,\n      birthDay,\n      date\n    } = values;\n    values.birthDay = getAge(birthDay);\n\n    try {\n      const res = await axios.post(\"/book\", values);\n      console.log(res.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getAge = time => {\n    const today = new Date();\n    const birthDay = new Date(time);\n    const age = today.getUTCFullYear() - birthDay.getUTCFullYear();\n\n    if (birthDay.getMonth < today.getMonth()) {\n      return age;\n    } else if (birthDay.getMonth() === today.getMonth()) {\n      if (birthDay.getDay() < today.getDay()) {\n        return age;\n      } else return age - 1;\n    } else return age - 1;\n  };\n\n  function validate(values) {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n\n    if (!values.birthDay) {\n      errors.birthDay = \"Required\";\n    }\n\n    if (!values.date) {\n      errors.date = \"Required\";\n    }\n\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validate: validate,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Nome Completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"name\",\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"name\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Data de Nascimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"birthDay\",\n        children: ({\n          form,\n          field\n        }) => {\n          const {\n            setFieldValue\n          } = form;\n          const {\n            value\n          } = field;\n          return /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"input\",\n            dateFormat: \"dd/MMM/yy\",\n            maxDate: new Date(),\n            id: \"birthDay\",\n            ...field,\n            selected: value,\n            onChange: val => setFieldValue(\"birthDay\", val),\n            showMonthDropdown: true,\n            showYearDropdown: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"birthDay\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Data de Vacina\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"date\",\n        placeHolder: \"Data de vacina\\xE7\\xE3o\",\n        children: ({\n          form,\n          field\n        }) => {\n          const {\n            setFieldValue\n          } = form;\n          const {\n            value\n          } = field;\n          return /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"input\",\n            dateFormat: \"dd/MMM/yyyy h:mm aa\",\n            timeFormat: \"HH:mm\",\n            timeIntervals: 15,\n            showTimeSelect: true,\n            minDate: new Date(),\n            id: \"date\",\n            ...field,\n            selected: value,\n            onChange: val => setFieldValue(\"date\", val)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"date\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"info\",\n        className: \"box-button is-medium\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BookForm;\nexport default BookForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["C:/Users/Hermes/Desktop/Pit/covid-app/frontend/src/components/Book/BookForm.jsx"],"names":["React","Button","Formik","Form","Field","ErrorMessage","DatePicker","axios","BookForm","initialValues","name","birthDay","date","onSubmit","values","getAge","res","post","console","log","data","e","time","today","Date","age","getUTCFullYear","getMonth","getDay","validate","errors","form","field","setFieldValue","value","val"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"./index.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"../../utils/api\";\n\nfunction BookForm() {\n  const initialValues = { name: \"\", birthDay: null, date: null };\n\n  const onSubmit = async (values) => {\n    const { name, birthDay, date } = values;\n    values.birthDay = getAge(birthDay);\n    try {\n      const res = await axios.post(\"/book\", values);\n      console.log(res.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getAge = (time) => {\n    const today = new Date();\n    const birthDay = new Date(time);\n    const age = today.getUTCFullYear() - birthDay.getUTCFullYear();\n    if (birthDay.getMonth < today.getMonth()) {\n      return age;\n    } else if (birthDay.getMonth() === today.getMonth()) {\n      if (birthDay.getDay() < today.getDay()) {\n        return age;\n      } else return age - 1;\n    } else return age - 1;\n  };\n\n  function validate(values) {\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n    if (!values.birthDay) {\n      errors.birthDay = \"Required\";\n    }\n    if (!values.date) {\n      errors.date = \"Required\";\n    }\n    return errors;\n  }\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={validate}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <label className=\"label\">Nome Completo</label>\n        <Field type=\"text\" name=\"name\" className=\"input\"></Field>\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <label className=\"label\">Data de Nascimento</label>\n        <Field name=\"birthDay\">\n          {({ form, field }) => {\n            const { setFieldValue } = form;\n            const { value } = field;\n            return (\n              <DatePicker\n                className=\"input\"\n                dateFormat=\"dd/MMM/yy\"\n                maxDate={new Date()}\n                id=\"birthDay\"\n                {...field}\n                selected={value}\n                onChange={(val) => setFieldValue(\"birthDay\", val)}\n                showMonthDropdown\n                showYearDropdown\n              />\n            );\n          }}\n        </Field>\n        <ErrorMessage name=\"birthDay\" component=\"div\" />\n        <label className=\"label\">Data de Vacinação</label>\n        <Field name=\"date\" placeHolder=\"Data de vacinação\">\n          {({ form, field }) => {\n            const { setFieldValue } = form;\n            const { value } = field;\n            return (\n              <DatePicker\n                className=\"input\"\n                dateFormat=\"dd/MMM/yyyy h:mm aa\"\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                showTimeSelect\n                minDate={new Date()}\n                id=\"date\"\n                {...field}\n                selected={value}\n                onChange={(val) => setFieldValue(\"date\", val)}\n              />\n            );\n          }}\n        </Field>\n        <ErrorMessage name=\"date\" component=\"div\" />\n        <Button type=\"submit\" color=\"info\" className=\"box-button is-medium\">\n          Submit\n        </Button>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default BookForm;\n"]},"metadata":{},"sourceType":"module"}