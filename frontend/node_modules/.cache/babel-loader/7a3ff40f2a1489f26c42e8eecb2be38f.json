{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hermes\\\\Desktop\\\\Pit\\\\covid-app\\\\src\\\\components\\\\Book\\\\BookForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"./index.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BookForm() {\n  _s();\n\n  const initialValues = {\n    name: \"\",\n    birthDay: null,\n    date: null\n  };\n  const [book, setBook] = useState(initialValues);\n\n  const fetchData = async () => {\n    const res = await axios.get(\"/books\");\n    console.log(res);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const onSubmit = async values => {\n    console.log(values);\n\n    try {\n      await axios.post(\"/books\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  function validate(values) {\n    const errors = {};\n\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n\n    if (!values.birthDay) {\n      errors.birthDay = \"Required\";\n    }\n\n    if (!values.date) {\n      errors.date = \"Required\";\n    }\n\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validate: validate,\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        type: \"text\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"name\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"birthDay\",\n        children: ({\n          form,\n          field\n        }) => {\n          const {\n            setFieldValue\n          } = form;\n          const {\n            value\n          } = field;\n          return /*#__PURE__*/_jsxDEV(DatePicker, {\n            dateFormat: \"dd/MMM/yy\",\n            maxDate: new Date(),\n            id: \"birthDay\",\n            ...field,\n            selected: value,\n            onChange: val => setFieldValue(\"birthDay\", val),\n            showMonthDropdown: true,\n            showYearDropdown: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"birthDay\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"date\",\n        children: ({\n          form,\n          field\n        }) => {\n          const {\n            setFieldValue\n          } = form;\n          const {\n            value\n          } = field;\n          return /*#__PURE__*/_jsxDEV(DatePicker, {\n            dateFormat: \"dd/MMM/yyyy h:mm aa\",\n            timeFormat: \"HH:mm\",\n            timeIntervals: 15,\n            showTimeSelect: true,\n            minDate: new Date(),\n            id: \"date\",\n            ...field,\n            selected: value,\n            onChange: val => setFieldValue(\"date\", val)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"date\",\n        component: \"div\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        color: \"info\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookForm, \"QBAqMPCsXWoB+rgd+mJN81aWa3A=\");\n\n_c = BookForm;\nexport default BookForm;\n/*\n<Columns>\n          <Columns.Column>\n            <Label>Nome:</Label>\n            <Control>\n              <Field name=\"name\" type=\"text\" />\n            </Control>\n          </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Data de nascimento:</Label>\n            <Control>\n              <DatePicker\n                type=\"date\"\n                selected={startDate}\n                className=\"blue-border\"\n              />\n            </Control>\n          </Columns.Column>\n        </Columns>\n\n        <Columns>\n          <Columns.Column>Agendamento </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Dia de vacinação:</Label>\n            <Control>\n              <DatePicker showTimeSelect className=\"blue-border\" />\n            </Control>\n          </Columns.Column>\n        </Columns>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"BookForm\");","map":{"version":3,"sources":["C:/Users/Hermes/Desktop/Pit/covid-app/src/components/Book/BookForm.jsx"],"names":["React","useEffect","useState","Button","Formik","Form","Field","ErrorMessage","DatePicker","axios","BookForm","initialValues","name","birthDay","date","book","setBook","fetchData","res","get","console","log","onSubmit","values","post","e","validate","errors","form","field","setFieldValue","value","Date","val"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bulma-components\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport \"./index.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"../../utils/api\";\n\nfunction BookForm() {\n  const initialValues = { name: \"\", birthDay: null, date: null };\n  const [book, setBook] = useState(initialValues);\n\n  const fetchData = async () => {\n    const res = await axios.get(\"/books\");\n    console.log(res);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const onSubmit = async (values) => {\n    console.log(values);\n    try {\n      await axios.post(\"/books\");\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  function validate(values) {\n    const errors = {};\n    if (!values.name) {\n      errors.name = \"Required\";\n    }\n    if (!values.birthDay) {\n      errors.birthDay = \"Required\";\n    }\n    if (!values.date) {\n      errors.date = \"Required\";\n    }\n    return errors;\n  }\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={validate}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <Field type=\"text\" name=\"name\" />\n        <ErrorMessage name=\"name\" component=\"div\" />\n        <Field name=\"birthDay\">\n          {({ form, field }) => {\n            const { setFieldValue } = form;\n            const { value } = field;\n            return (\n              <DatePicker\n                dateFormat=\"dd/MMM/yy\"\n                maxDate={new Date()}\n                id=\"birthDay\"\n                {...field}\n                selected={value}\n                onChange={(val) => setFieldValue(\"birthDay\", val)}\n                showMonthDropdown\n                showYearDropdown\n              />\n            );\n          }}\n        </Field>\n        <ErrorMessage name=\"birthDay\" component=\"div\" />\n        <Field name=\"date\">\n          {({ form, field }) => {\n            const { setFieldValue } = form;\n            const { value } = field;\n            return (\n              <DatePicker\n                dateFormat=\"dd/MMM/yyyy h:mm aa\"\n                timeFormat=\"HH:mm\"\n                timeIntervals={15}\n                showTimeSelect\n                minDate={new Date()}\n                id=\"date\"\n                {...field}\n                selected={value}\n                onChange={(val) => setFieldValue(\"date\", val)}\n              />\n            );\n          }}\n        </Field>\n        <ErrorMessage name=\"date\" component=\"div\" />\n        <Button type=\"submit\" color=\"info\">\n          Submit\n        </Button>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default BookForm;\n\n/*\n<Columns>\n          <Columns.Column>\n            <Label>Nome:</Label>\n            <Control>\n              <Field name=\"name\" type=\"text\" />\n            </Control>\n          </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Data de nascimento:</Label>\n            <Control>\n              <DatePicker\n                type=\"date\"\n                selected={startDate}\n                className=\"blue-border\"\n              />\n            </Control>\n          </Columns.Column>\n        </Columns>\n\n        <Columns>\n          <Columns.Column>Agendamento </Columns.Column>\n          <Columns.Column className=\"box_date\">\n            <Label>Dia de vacinação:</Label>\n            <Control>\n              <DatePicker showTimeSelect className=\"blue-border\" />\n            </Control>\n          </Columns.Column>\n        </Columns>\n*/\n"]},"metadata":{},"sourceType":"module"}